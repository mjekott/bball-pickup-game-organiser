version: "3.8"

services:
  web:
    build:
      dockerfile: docker/Dockerfile
      context: .
    restart: unless-stopped
    ports:
      - "8000"
    env_file:
      - .env
    environment:
      APP_ENV: ${APP_ENV:-dev}
      MONGO_HOST: 'db'
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      APP_DATABASE: ${APP_DATABASE}
    volumes:
      - ${PWD}/backend/:/opt/code/backend
      - ${PWD}/cli.py:/opt/code/cli.py
    networks:
      - web
      - database

  react_app:
    build:
      dockerfile: docker/react/Dockerfile
      context: .
    volumes:
      - ${PWD}/web:/opt/react
    networks:
      - web
    depends_on:
      - web

  reverse_proxy:
    image: nginx:1.21-alpine
    restart: always
    volumes:
      - ${PWD}/docker/nginx/app.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - web
      - react_app
    networks:
      - web

  db:
    image: mongo:5.0
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-example}
      MONGO_INITDB_DATABASE: ${APP_DATABASE}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./data/mongo:/data/db
      - ./docker/mongo/init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - database

networks:
  web:
  database:

volumes:
  react_app:

